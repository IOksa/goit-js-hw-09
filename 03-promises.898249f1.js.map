{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAK,CACTC,KAAMC,SAASC,cAAc,QAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,wBACpCI,OAAQL,SAASC,cAAc,gBAkCjC,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EAEFF,EAAQ,CAACH,WAAUC,UAGnBG,EAAO,CAACJ,WAAUC,S,GAEnBA,E,IAzCPV,EAAKC,KAAKiB,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAIC,iBACJpB,EAAKO,OAAOc,UAAS,EAGnB,IAFF,IAAMC,EAAQtB,EAAKM,YAAYiB,MAErBC,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAAE,CACjC,IAAIC,EAAIC,OAAO1B,EAAKI,WAAWmB,OAAOG,QAAQF,EAAI,GAAGxB,EAAKK,UAAUkB,OACpDf,EAAcgB,EAAKC,GAElCE,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBZ,EAAA+B,OAAOC,QAAQ,qBAAoCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,O,IAE1DsB,OAAM,SAAAJ,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBZ,EAAA+B,OAAOI,QAAQ,oBAAmCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,O,IAI5D,IAAMwB,EAAWR,OAAO1B,EAAKI,WAAWmB,OAAOG,OAAOJ,EAAQtB,EAAKK,UAAUkB,OAAe,IAARD,EACpFa,QAAQC,IAAI,aAAcF,GAC1BjB,YAAW,WACTjB,EAAKO,OAAOc,UAAS,EACrBrB,EAAKI,WAAWmB,MAAM,GACtBvB,EAAKK,UAAUkB,MAAM,GACrBvB,EAAKM,YAAYiB,MAAM,E,GACtBW,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs={\n  form: document.querySelector('form'),\n  inputDelay: document.querySelector('input[name=\"delay\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\"]'),\n  button: document.querySelector('form button'),\n};\n\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt){\n  evt.preventDefault();\n  refs.button.disabled=true;\n  const counter=refs.inputAmount.value;\n\n    for(let pos=1; pos<=counter;pos+=1){\n      let del=Number(refs.inputDelay.value)+Number((pos-1)*refs.inputStep.value);\n      const promise = createPromise(pos, del);\n      promise\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay} ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay} ms`);\n      });\n    }\n\n    const delayTimer=Number(refs.inputDelay.value)+Number(counter*refs.inputStep.value)+counter*300;\n    console.log('delayTimer', delayTimer);\n    setTimeout(()=>{\n      refs.button.disabled=false;\n      refs.inputDelay.value=\"\";\n      refs.inputStep.value=\"\";\n      refs.inputAmount.value=\"\";\n    }, delayTimer);\n \n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({position, delay});\n      }else{\n      // Reject\n        reject({position, delay});\n      }\n    }, delay);\n  });\n}\n\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","inputDelay","inputStep","inputAmount","button","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","disabled","counter","value","pos","del","Number","then","param","Notify","success","concat","catch","failure","delayTimer","console","log"],"version":3,"file":"03-promises.898249f1.js.map"}